acoustic:
  audio_size: 160                                       # `int`, 39 for mfcc, 40 for fmllr, 80 for fbank, 160 for mel
  max_position_embeddings: 3000
  downsample_rate: 1                                    # stacked consecutive features vectors to reduce the length of input sequences by this factor.
  hidden_size: 768                                      # Size of the encoder layers and the pooler layer.
  num_hidden_layers: 6                                  # Number of hidden layers in the Transformer encoder.
  num_attention_heads: 12                               # Number of attention heads for each attention layer in the Transformer encoder.
  intermediate_size: 3072                               # The size of the "intermediate" (i.e., feed-forward) layer in the Transformer encoder.
  hidden_act: "gelu"                                    # The non-linear activation function (function or string) in the encoder and pooler. If string, "gelu", "relu" and "swish" are supported.
  hidden_dropout_prob: 0.1                              # The dropout probabilitiy for all fully connected layers in the embeddings, encoder, and pooler.
  attention_probs_dropout_prob: 0.1                     # The dropout ratio for the attention probabilities.
  initializer_range: 0.02                               # The sttdev of the truncated_normal_initializer for initializing all weight matrices.
  mask_proportion: 0.15                                 # mask this percentage of all spectrogram frames in each sequence at random during MAM training                        
  mask_consecutive_min: 20                              # mask this amount of consecutive frames
  mask_consecutive_max: 50                              # mask this amount of consecutive frames
  mask_allow_overlap: True                              # allow overlap masking
  mask_bucket_ratio: 1.2                                # only used when overlap is not allowed. sample a mask from each bucket in size of [sampled mask_consecutive * mask_bucket_ratio]
  mask_frequency: 0                                     # mask maximum this amount of frequency bands, set to 0 for no frequency mask
  noise_proportion: 0.0                                 # for this percentage of the time, Gaussian noise will be applied on all frames during MAM training, set to 0 for no noise
  max_input_length: 3000                                # maximum input length (0 for no restriction)
  is_decoder: True
  add_cross_attention: True
  

semantic:
  hidden_size: 768                                      # Size of the encoder layers and the pooler layer.
  num_hidden_layers: 6                                  # Number of hidden layers in the Transformer encoder.
  num_attention_heads: 12                               # Number of attention heads for each attention layer in the Transformer encoder.
  intermediate_size: 3072                               # The size of the "intermediate" (i.e., feed-forward) layer in the Transformer encoder.
  hidden_act: "gelu"                                    # The non-linear activation function (function or string) in the encoder and pooler. If string, "gelu", "relu" and "swish" are supported.
  hidden_dropout_prob: 0.1                              # The dropout probabilitiy for all fully connected layers in the embeddings, encoder, and pooler.
  attention_probs_dropout_prob: 0.1                     # The dropout ratio for the attention probabilities.
  initializer_range: 0.02                               # The sttdev of the truncated_normal_initializer for initializing all weight matrices.
  mask_proportion: 0.15                                 # mask this percentage of all spectrogram frames in each sequence at random during MAM training 
  vocab_size: 21128


optimizer: 
  type: 'adamW'                                          # modes: ['adam', 'adamW', 'lamb']
  learning_rate: "5e-5"                                 # Learning rate for opt. "4e-4" for 'data/libri_mel160_subword5000', "2e-4" for 'data/libri_fmllr_cmvn'
  loss_scale: 0                                         # Loss scale to improve fp16 numeric stability. Only used when apex is set to True. 0: dynamic loss scaling. positive power of 2: static loss scaling.
  warmup_proportion: 0.07                               # Proportion of training to perform linear rate warmup.
  gradient_accumulation_steps: 1                        # Number of updates steps to accumulate before performing a backward/update pass
  gradient_clipping: 1.0                                # Maximum gradient norm


dataloader:
  n_jobs: 8                                             # Subprocess used for torch Dataloader
  batch_size: 16                                         # training batch size
  max_timestep: 3000                                    # Max length for audio feature (0 for no restriction)
  
  # LIBRISEECH SETTINGS
  data_path: '/vol/nfs/mgl/GST/3_31_ctaL/CTAL-main/dataset'                  # Source data path, run: `python preprocess/preprocess_libri.py --feature_type=fbank --delta=True`
  target_path: ''                                       # Target data path for reconstruction to a different feature type, for example linear spectrograms
  phone_path: ''                                        # phone boundary label data path for the phone classification task. set to 'data/libri_phone' or 'data/cpc_phone'
  train_set: ['train']              # can be the subset of ['train-clean-100', 'train-clean-360', 'train-other-500']
  tokenizer_path: '/vol/nfs/mgl/GST/3_31_ctaL/CTAL-main/chinese-roberta-wwm-ext'


runner:
  # Training options
  apex: False                                           # Use APEX (see https://github.com/NVIDIA/apex for more details)
  total_steps: 600480                               # total steps for training, a step is a batch of update
  log_step: 7506                                        # log training status every this amount of training steps
  valid_step: 7506                                          # log training status every this amount of training steps
  save_step: 7506                                       # save model every this amount of training steps
  duo_feature: False                                    # Use different input / output features during training
  max_keep: 50                                           # maximum number of model ckpt to keep during training

decode:
  beam_size: 20
  min_len_ratio: 0.01
  max_len_ratio: 0.07

attention:
  mode: 'loc'                           # 'dot'/'loc'
  dim: 300
  num_head: 1
  v_proj: False                         # if False and num_head>1, encoder state will be duplicated for each head
  temperature: 0.5                      # scaling factor for attention
  loc_kernel_size: 100                  # just for mode=='loc'
  loc_kernel_num: 10                    # just for mode=='loc'

decoder:
  module: 'LSTM'                        # 'LSTM'/'GRU'/'Transformer'
#  dim: 512
  dim: 768 #3.14 gst change,because Encoder's dim is 768
  layer: 1
  dropout: 0